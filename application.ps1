$applications = Get-ItemProperty HKLM:\Software\Wow6432Node\Microsoft\Windows\CurrentVersion\Uninstall\* | Select-Object DisplayName, DisplayVersion, Publisher
$count=0

$outfile = "$pwd\application_vuln.csv"
Remove-Item $outfile -Force



$applications | ForEach-Object ($_) {

$appsfound = 0
$value=Get-Content $pwd\value.txt
#write-host $value 

$check = $applications[$count].DisplayName+", "+$applications[$count].Displayversion
$check = $check -replace ' ','+'

Write-Host $check
$url = "https://cve.mitre.org/cgi-bin/cvekey.cgi?keyword=$check"
$HTML = Invoke-WebRequest -Uri $url
$output = $HTML.Links | ForEach-Object -MemberName innertext | Select-String "CVE-"

    foreach ($_ in $output) {

    #imposed limit of 50, due to how the vulnerabilties are displayed on the website, this will display the newest 50, the most threatening group.
        if ($appsfound -lt $value) {

            #writing out each member of the object as a string that can be utilised by PS
            $CVE = $_

            $url2 = "https://nvd.nist.gov/vuln/search/results?form_type=Basic&results_type=overview&query=$CVE"
            $html2 = Invoke-WebRequest -Uri $url2
            $output2 = $html2.ParsedHtml.all.tags("td") | ForEach-Object -MemberName innertext 

            #Write-Host $CVE
            #Write-Host $output2

            #custom object which exports data to a csv file for use external to this script.
            if ($applications[$count].DisplayName -gt 3) {
                    [pscustomobject]@{

                    App_Name =  $applications[$count].DisplayName
                    App_Version =$applications[$count].Displayversion
                    CVE = $cve
                    Publisher = $applications[$count].Publisher
                    Comment = (@($output2) -join ',')

                    } | export-csv -NoTypeInformation -Path $outfile -Append
            }
                else {break}
            $appsfound++
        }
        else {break}
    }

$count++
} 
Remove-Item $pwd\value.txt -Force


